/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
group 'homeworkADKP'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

def junitVintageVersion  = '5.1.0'
def junitPlatformVersion = '1.1.0'
def junitJupiterVersion  = '5.1.0'
def log4jVersion         = '2.9.0'

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

run {
    args += 'D:\\Projects\\stream-join\\Views.csv D:\\Projects\\stream-join\\Clicks.csv D:\\Projects\\stream-join\\ViewableViews.csv'
}

sourceCompatibility = "1.9"
targetCompatibility = "1.9"

junitPlatform {
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

mainClassName = "ADHomework.StreamJoin"

sourceSets.test {
    resources.srcDirs = ["src/test/resources"]
}

int javaVersion = Integer.valueOf((String) JavaVersion.current().getMajorVersion())
if (javaVersion < 10) apply plugin: 'jacoco'

jar {
    baseName = 'junit5-gradle-consumer'
    version = '1.0.0-SNAPSHOT'
}

test {
    useJUnitPlatform {
        // includeEngines 'junit-jupiter', 'junit-vintage'
        // excludeEngines 'custom-engine'

        // includeTags 'fast'
        excludeTags 'slow'
    }

    testLogging {
        events 'started', 'passed', 'skipped', 'failed'
    }

    reports {
        html.enabled = true
    }
}

dependencies {
    //test.useJUnitPlatform()

    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // To use Log4J's LogManager
    //testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    //testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    compile group: 'com.opencsv', name: 'opencsv', version: '4.1';
    compile 'commons-io:commons-io:2.6';
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.6'
}